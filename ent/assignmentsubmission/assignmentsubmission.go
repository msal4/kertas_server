// Code generated by entc, DO NOT EDIT.

package assignmentsubmission

import (
	"time"
)

const (
	// Label holds the string label denoting the assignmentsubmission type in the database.
	Label = "assignment_submission"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldFiles holds the string denoting the files field in the database.
	FieldFiles = "files"
	// FieldSubmittedAt holds the string denoting the submitted_at field in the database.
	FieldSubmittedAt = "submitted_at"
	// EdgeStudent holds the string denoting the student edge name in mutations.
	EdgeStudent = "student"
	// EdgeAssignment holds the string denoting the assignment edge name in mutations.
	EdgeAssignment = "assignment"
	// Table holds the table name of the assignmentsubmission in the database.
	Table = "assignment_submissions"
	// StudentTable is the table that holds the student relation/edge.
	StudentTable = "assignment_submissions"
	// StudentInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	StudentInverseTable = "users"
	// StudentColumn is the table column denoting the student relation/edge.
	StudentColumn = "user_submissions"
	// AssignmentTable is the table that holds the assignment relation/edge.
	AssignmentTable = "assignment_submissions"
	// AssignmentInverseTable is the table name for the Assignment entity.
	// It exists in this package in order to avoid circular dependency with the "assignment" package.
	AssignmentInverseTable = "assignments"
	// AssignmentColumn is the table column denoting the assignment relation/edge.
	AssignmentColumn = "assignment_submissions"
)

// Columns holds all SQL columns for assignmentsubmission fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldFiles,
	FieldSubmittedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "assignment_submissions"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"assignment_submissions",
	"user_submissions",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)

// Code generated by entc, DO NOT EDIT.

package grade

import (
	"time"
)

const (
	// Label holds the string label denoting the grade type in the database.
	Label = "grade"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldExamGrade holds the string denoting the exam_grade field in the database.
	FieldExamGrade = "exam_grade"
	// EdgeStudent holds the string denoting the student edge name in mutations.
	EdgeStudent = "student"
	// EdgeExam holds the string denoting the exam edge name in mutations.
	EdgeExam = "exam"
	// Table holds the table name of the grade in the database.
	Table = "grades"
	// StudentTable is the table that holds the student relation/edge.
	StudentTable = "grades"
	// StudentInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	StudentInverseTable = "users"
	// StudentColumn is the table column denoting the student relation/edge.
	StudentColumn = "user_grades"
	// ExamTable is the table that holds the exam relation/edge.
	ExamTable = "grades"
	// ExamInverseTable is the table name for the Assignment entity.
	// It exists in this package in order to avoid circular dependency with the "assignment" package.
	ExamInverseTable = "assignments"
	// ExamColumn is the table column denoting the exam relation/edge.
	ExamColumn = "assignment_grades"
)

// Columns holds all SQL columns for grade fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldExamGrade,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "grades"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"assignment_grades",
	"user_grades",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
	// ExamGradeValidator is a validator for the "exam_grade" field. It is called by the builders before save.
	ExamGradeValidator func(float64) error
)
